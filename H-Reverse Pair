import java.util.ArrayList;

public class Solution {
    public static int team(int []skill, int n){
        return mergesort(skill , 0 , n-1);
    }

    public static int mergesort(int []arr , int low , int high){
        int count=0;
        if(low>=high) return 0;
        int mid = (low+high)/2;
        count = count + mergesort(arr,low,mid);
        count = count + mergesort(arr,mid+1,high);
        count = count + Pair(arr , low , mid , high);
        merge(arr , low , mid ,high);
        return count;

    }

    public static int Pair(int []arr , int low , int mid , int high){
        int count = 0;
        int right = mid+1;
        for(int i=low ; i<=mid ;i++){
            while(right<=high && arr[i]> 2*arr[right]){
                right++;
            }
            count = count +(right-(mid+1));
        }
        return count;
    }

    public static void merge(int []arr , int low , int mid , int high){
        int left = low;
        int right = mid+1;
        ArrayList<Integer> a = new ArrayList<>();

        while(left<=mid && right<=high){
            if(arr[left]<=arr[right]){
                a.add(arr[left]);
                left++;
            }
            else{
                a.add(arr[right]);
                right++;
            }
        }
        while(left<=mid){
            a.add(arr[left]);
            left++;
        }
        while(right<=high){
            a.add(arr[right]);
            right++;
        }

        for(int i=low ; i<=high ; i++){
            arr[i] = a.get(i-low);
        }

    }
}
